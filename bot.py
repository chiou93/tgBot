import telebot
import configure
from telebot import types

client = telebot.TeleBot(configure.config['token'])


@client.message_handler(commands=['get_info', 'info'])
def get_user_info(message):
    markup_inline = types.InlineKeyboardMarkup() #telebot.types.InlineKeyboardMarkup()
    item_yes = types.InlineKeyboardButton(text = '–î–ê', callback_data = 'yes')
    item_no = types.InlineKeyboardButton(text = '–ù–ï–¢', callback_data = 'no')

    markup_inline.add(item_yes, item_no)
    client.send_message(message.chat.id, '–ñ–µ–ª–∞–µ—à—å —É–∑–Ω–∞—Ç—å  –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ?', reply_markup = markup_inline)


@client.callback_query_handler(func = lambda call: True)
def answer(call):
    if call.data == 'yes':
        markup_reply = types.ReplyKeyboardMarkup(resize_keyboard = True)
        item_id = types.KeyboardButton('–ú–æ–π ID')
        item_username = types.KeyboardButton('–ú–æ–π –Ω–∏–∫')

        markup_reply.add(item_id, item_username)
        client.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup = markup_reply)
    elif call.data == 'no':
        client.send_message(call.message.chat.id, '–•–æ—Ä–æ—à–æ')
    
    


@client.message_handler(content_types=['text']) # client.message_handler-–æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ –±–æ—Ç—É: message_handler-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π: content_types=['text']-—Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è
def get_text(message): # def get_text()-—Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç': # message.text.lower()-–ø—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
        client.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —á–µ–ª–æ–≤–µ–∫!') # client.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —á–µ–ª–æ–≤–µ–∫!')-–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ: message.chat.id-–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, '–ü—Ä–∏–≤–µ—Ç, —á–µ–ª–æ–≤–µ–∫!'-—Å–æ–æ–±—â–µ–Ω–∏–µ
    elif message.text.lower() == '–∫–∞–∫ –¥–µ–ª–∞?':
        client.send_message(message.chat.id, '–í—Å–µ —Ö–æ—Ä–æ—à–æ, –∫–∞–∫ —É —Ç–µ–±—è?‚ù§Ô∏è')
    elif message.text.lower() == '—Ö–æ—Ä–æ—à–æ':
        client.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ!üòä')
    elif message.text.lower() == '–ø–æ–∫–∞':
        client.send_message(message.chat.id, '–î–æ –≤—Å—Ç—Ä–µ—á–∏!üëã')
    elif message.text.lower() == '/start':
        client.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —á–µ–ª–æ–≤–µ–∫!')
    elif message.text.lower() == '/help':
        client.send_message(message.chat.id, '–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ, –Ω–∞–±–µ—Ä–∏ /info.')
    elif message.text.lower() == '/info':
        get_user_info(message)
    elif message.text == '–ú–æ–π ID':
        client.send_message(message.chat.id, f'Your ID: {message.from_user.id}') #'–¢–≤–æ–π id: ' + str(message.chat.id)
    elif message.text == '–ú–æ–π –Ω–∏–∫':
        client.send_message(message.chat.id, f'Your name: {message.from_user.first_name} {message.from_user.last_name}') #'–¢–≤–æ–π –Ω–∏–∫: ' + message.chat.username




client.polling(none_stop=True) # client.polling(none_stop=True)-–±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: interval=0-–∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –∫ —Å–µ—Ä–≤–µ—Ä—É